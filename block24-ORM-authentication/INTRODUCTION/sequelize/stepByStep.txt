1) npm init -y

2) npm install sequelize

3) npm install sequelize-cli

4) npm install mysql2

5) npx sequelize-cli init:
   
     -create:

    config : contém um arquivo de configuração, que "fala" para o CLI como conectar-se com o nosso banco de dados;
    models : contém todos os modelos da nossa aplicação;
    migrations : contém todos os arquivos de migração da nossa aplicação;
    seeders : contém todos os arquivos de "seeds".

6) configure config.json:

    {
    "development": {
        "username": "root",
        "password": "",
        "database": "orm_example",
        "host": "127.0.0.1",
        "dialect": "mysql"
    }

    // No resto do arquivo você vai encontrar as convenções para conectar o Sequelize em outros ambientes
    }

7) npx sequelize db:create      (create database)

8) mysql -u brenomatias@localhost -p   (acessar o sql pelo cli)

9) npx sequelize model:generate --name User --attributes fullName:string

    Queremos criar uma tabela Users
   é gerar um model que irá representar uma Instância de usuário , ou uma linha na tabela Users no nosso banco

   user.js created in models
   create-user.js in migrations

10)  não iremos trabalhar com classes, mas sim com a função sequelize.define()

            substituir o codigo em models/user.js por: 
        
        const User = (sequelize, DataTypes) => {
        const User = sequelize.define("User", {
        fullName: DataTypes.STRING,
            email: DataTypes.STRING,
        });

        return User;
        };

        module.exports = User;