# nginx program



# find nginx in docker hub
# some images versions (like branchs/releases)
# lookup documentation

FROM nginx
# imagem que ja foi feito por outra pessoa com tudo que o nginx precisa pra rodar
# if dont tag ':tag' default :latest

# create file to serve (hello.html)

# copy the file into a container with -it (interactive)
# create a container
# *** i did not this yet
# (create a container)

# location in root? of a image inside in container doubt (create in stackoverflow)

#         cat /etc/nginx(name)/conf.d/default.conf 
# este comando é executado dentro do terminal de dentro da imagem
# (find directory, root location)
 
# COPY index.html location/newname (diretório da imagem)
#        source      address(endereço dentro do container/ olha caminho de diretório no root comando acima)
# copia o arquivo para o diretorio da imagem original e cria um novo

# criar imagem (criar imagem baseada em cima da atual)
#          docker build -t name .      (no terminal)
# criar camada nova
# cria imagem baseada em outra imagem
# outra imagem está no local
# os arquivos da imagem vem em camadas sobrepostas

# se mudar imagem (criar uma nova) precisa executar outro container

# criar container a partir da imagem
# docker run -it nameCreated 

# exec -it containerId bash 
# rodar bash dentro do container

# exposiçao de porta do servido 
# docker run -d -p 5000:80 image
# cria novo container
# local host:imagem host



# PRIMEIRA PARTE DA AULA ate aqi



(REVER SA PORRA)

# jogar react dentro da imagem
#     npx create-react-ap nameApp

# buildar react

# npm run build 
# cria uma build

# cria Dockerfile novo
# no novo Dockefile

# FROM nginx:latest
# COPY build /usr/share/nginx/build

# docker build -t turma14/app
# docker run -it 

# cria default.conf (novo arquivo)

# copia o arquivo default para 
#   COPY default.conf /etc/nginx/conf.d/default.conf


# cria imagem nova 
# docker build -t turma/14bis (mesmo novo foda-se)
